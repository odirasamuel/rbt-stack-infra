on:
  push:
    branches:
      - "*"
    paths:
      - "inf/ot3-ci/**/*"
      - "inf/modules/**/*"
      - ".github/workflows/ot3-ci-terraform-deploy-prod.yaml"
    tags:
      - "ot3-ci@v*"
      - "!ot3-ci@v*-staging"
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  deploy-terraform-configurations-to-ot3-ci-stack-prod:
    runs-on: "ubuntu-latest"
    env:
      TF_VAR_runner_pool_github_token_monorepo: ${{ secrets.OT3_CI_GH_PAT_MONOREPO }}
      TF_VAR_runner_pool_github_token_openembedded: ${{ secrets.OT3_CI_GH_PAT_OE_CORE }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0
          terraform_wrapper: false
      - name: Set up aws cli
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          sudo apt install unzip
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version
        shell: bash
      - name: Add profile credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile identity
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile identity
        shell: bash
      - name: Add config for profiles
        run: |
          aws configure set region us-east-2 --profile identity
          aws configure set output json --profile identity
          aws configure set region us-east-2 --profile terraform-state
          aws configure set role_arn "arn:aws:iam::592830654455:role/terraform-deployers" --profile terraform-state
          aws configure set source_profile identity --profile terraform-state
          aws configure set region us-east-2 --profile robotics_robot_stack_dev-admin
          aws configure set role_arn arn:aws:iam::699250785121:role/administrator --profile robotics_robot_stack_dev-admin
          aws configure set source_profile identity --profile robotics_robot_stack_dev-admin
          aws configure set region us-east-2 --profile robotics_robot_stack_prod-admin
          aws configure set role_arn arn:aws:iam::879285218407:role/administrator --profile robotics_robot_stack_prod-admin
          aws configure set source_profile identity --profile robotics_robot_stack_prod-admin
        shell: bash
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: inf/ot3-ci
        shell: bash
      - name: Terraform Workspace
        id: workspace-setup
        run: terraform workspace select prod
        working-directory: inf/ot3-ci
        shell: bash
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: inf/ot3-ci
        shell: bash
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: inf/ot3-ci
        shell: bash
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -var-file=ot3-ci.tfvars -no-color -out tf_plan_prod
        working-directory: inf/ot3-ci
        shell: bash
      - name: Terraform Show
        id: show
        run: |
          terraform show -no-color tf_plan_prod 2>&1 | tee /tmp/tf_plan_prod.txt
        working-directory: inf/ot3-ci
        shell: bash
      - name: Upload Plan
        uses: "actions/upload-artifact@v3"
        with:
          name: tf_plan_prod.txt
          path: "/tmp/tf_plan_prod.txt"
      - name: Terraform Apply
        if: startswith(github.ref, 'refs/tags/ot3-ci@') && !endsWith(github.ref, '-staging')
        run: |
          terraform apply -input=false tf_plan_prod
        working-directory: inf/ot3-ci
        shell: bash
        continue-on-error: true
